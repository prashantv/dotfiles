{{ $ageVersion := "1.0.0" }}
{{ $batVersion := "0.21.0" }}
{{ $deltaVersion := "0.13.0" }}
{{ $fdVersion := "8.3.2" }}
{{ $fzfVersion := "0.52.1" }}
{{ $gitSpiceVersion := "0.7.0" }}
{{ $gojqVersion := "0.12.8" }}
{{ $gronVersion := "0.7.1" }}
{{ $hxVersion := "23.05" }}
{{ $jqpVersion := "0.1.0" }}
{{ $nvimVersion := "0.10.0" }}
{{ $ripgrepVersion := "13.0.0" }}
{{ $tmuxFastCopyVersion := "0.8.0" }}

["age"]
  type = "archive"
  url = "https://github.com/FiloSottile/age/releases/download/v{{ $ageVersion }}/age-v{{ $ageVersion }}-{{ .chezmoi.os }}-{{ .chezmoi.arch }}.tar.gz"


["bat"]
  type = "archive"
  {{ $batArch := .chezmoi.arch | replace "amd64" "x86_64" | replace "arm64" "aarch64" }}
  {{ $batOS := .chezmoi.os | replace "linux" "unknown-linux-gnu" | replace "darwin" "apple-darwin" }}
  {{/* bat is not available for darwin/arm64: https://github.com/sharkdp/bat/issues/1551 */}}
  {{ if all (eq $batOS "apple-darwin") (eq $batArch "aarch64") }}
  {{ $batArch = "x86_64" }}
  {{ end }}
  url = "https://github.com/sharkdp/bat/releases/download/v{{ $batVersion }}/bat-v{{ $batVersion }}-{{ $batArch }}-{{ $batOS }}.tar.gz"
  stripComponents = 1

["delta"]
  type = "archive"
  {{ $deltaArch := .chezmoi.arch | replace "amd64" "x86_64" | replace "arm64" "aarch64" }}
  {{ $deltaOS := .chezmoi.os | replace "linux" "unknown-linux-gnu" | replace "darwin" "apple-darwin" }}
  {{/* delta is not available for darwin/arm64, even though this issue is closed: https://github.com/dandavison/delta/issues/484 */}}
  {{ if all (eq $deltaOS "apple-darwin") (eq $deltaArch "aarch64") }}
  {{ $deltaArch = "x86_64" }}
  {{ end }}
  url = "https://github.com/dandavison/delta/releases/download/{{ $deltaVersion }}/delta-{{ $deltaVersion }}-{{ $deltaArch }}-{{ $deltaOS }}.tar.gz"
  stripComponents = 1

["fd"]
  type = "archive"
  {{ $fdArch := .chezmoi.arch | replace "amd64" "x86_64" | replace "arm64" "aarch64" }}
  {{ $fdOS := .chezmoi.os | replace "linux" "unknown-linux-gnu" | replace "darwin" "apple-darwin" }}
  {{/* fd is not available for darwin/arm64: https://github.com/sharkdp/fd/pull/738 */}}
  {{ if all (eq $fdOS "apple-darwin") (eq $fdArch "aarch64") }}
  {{ $fdArch = "x86_64" }}
  {{ end }}
  url = "https://github.com/sharkdp/fd/releases/download/v{{ $fdVersion }}/fd-v{{ $fdVersion }}-{{ $fdArch }}-{{ $fdOS }}.tar.gz"
  stripComponents = 1

["fzf"]
  type = "archive"
  ## fzf uses .zip for Windows/Darwin, and .tar.gz for others.
  {{ $fzfReleaseExt := "tar.gz" }}
  {{ if eq .chezmoi.os "darwin" }}
  {{ $fzfReleaseExt = "zip" }}
  {{ end }}
  url = "https://github.com/junegunn/fzf/releases/download/{{ $fzfVersion }}/fzf-{{ $fzfVersion }}-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.{{ $fzfReleaseExt }}"

["git-spice"]
  type = "archive"
  {{ $gitSpiceArch := .chezmoi.arch | replace "amd64" "x86_64" }}
  {{ $gitSpiceOs := .chezmoi.os | title }}
  url = "https://github.com/abhinav/git-spice/releases/download/v{{ $gitSpiceVersion }}/git-spice.{{ $gitSpiceOs }}-{{ $gitSpiceArch }}.tar.gz"


["gojq"]
  type = "archive"
  ## gojq uses .tar.gz for Linux, and .zip for others.
  {{ $gojqReleaseExt := "zip" }}
  {{ if eq .chezmoi.os "linux" }}
  {{ $gojqReleaseExt = "tar.gz" }}
  {{ end }}
  url = "https://github.com/itchyny/gojq/releases/download/v{{ $gojqVersion }}/gojq_v{{ $gojqVersion }}_{{ .chezmoi.os}}_{{ .chezmoi.arch }}.{{ $gojqReleaseExt}}"
  stripComponents = 1

["gron"]
  type = "archive"
  url = "https://github.com/tomnomnom/gron/releases/download/v{{ $gronVersion }}/gron-{{ .chezmoi.os }}-{{ .chezmoi.arch }}-{{ $gronVersion }}.tgz"

["hx"]
  type = "archive"
  {{ $hxArch := .chezmoi.arch | replace "amd64" "x86_64" | replace "arm64" "aarch64" }}
  url = "https://github.com/helix-editor/helix/releases/download/{{ $hxVersion }}/helix-{{ $hxVersion }}-{{ $hxArch }}-{{ .chezmoi.os}}.tar.xz"
  stripComponents = 1

["jqp"]
  type = "archive"
  {{ $jqpArch := .chezmoi.arch | replace "amd64" "x86_64" }}
  {{ $jqpOs := .chezmoi.os | title }}
  url = "https://github.com/noahgorstein/jqp/releases/download/v{{ $jqpVersion }}/jqp_{{ $jqpVersion }}_{{ $jqpOs }}_{{ $jqpArch }}.tar.gz"

["nvim"]
  type = "archive"
  {{ $nvimSuffix := printf "%v%v.tar.gz" .chezmoi.os .chezmoi.arch }}
  {{ $nvimSuffix = $nvimSuffix | replace "amd64" "64" }}
  {{ if eq .chezmoi.os "darwin" }}
  {{ $nvimSuffix = "macos.tar.gz" }}
  {{ end }}
  url = "https://github.com/neovim/neovim/releases/download/v{{ $nvimVersion }}/nvim-{{ $nvimSuffix }}"
  stripComponents = 1

["ripgrep"]
  type = "archive"
  {{ $ripgrepArch := .chezmoi.arch | replace "amd64" "x86_64" | replace "arm64" "aarch64" }}
  {{ $ripgrepOS := .chezmoi.os | replace "linux" "unknown-linux-musl" | replace "darwin" "apple-darwin" }}
  {{/* ripgrep is not available for darwin/arm64: https://github.com/BurntSushi/ripgrep/pull/2099 */}}
  {{ if all (eq $ripgrepOS "apple-darwin") (eq $ripgrepArch "aarch64") }}
  {{ $ripgrepArch = "x86_64" }}
  {{ end }}
  url = "https://github.com/BurntSushi/ripgrep/releases/download/{{ $ripgrepVersion }}/ripgrep-{{ $ripgrepVersion }}-{{ $ripgrepArch }}-{{ $ripgrepOS }}.tar.gz"
  stripComponents = 1

["tmux-fastcopy"]
  type = "archive"

  ## tmux-fastcopy uses x86_64 instead of amd64
  {{ $tmuxFastCopyArch := .chezmoi.arch | replace "amd64" "x86_64" }}
  url = "https://github.com/abhinav/tmux-fastcopy/releases/download/v{{ $tmuxFastCopyVersion }}/tmux-fastcopy_{{ $tmuxFastCopyVersion }}_{{ .chezmoi.os }}_{{ $tmuxFastCopyArch }}.tar.gz"
